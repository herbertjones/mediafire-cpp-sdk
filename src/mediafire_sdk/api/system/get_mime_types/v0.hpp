/**
 * @file api/system/get_mime_types.hpp
 * @brief API request: /api/system/get_mime_types
 *
 * @copyright Copyright 2014 Mediafire
 *
 * This file was generated by gen_api_template.py. Do NOT edit by hand.
 */
#pragma once

#include <string>
#include <vector>

#include "mediafire_sdk/http/headers.hpp"
#include "mediafire_sdk/api/response_base.hpp"

#include "boost/date_time/posix_time/ptime.hpp"

namespace mf {
namespace api {
/** API action path "system" */
namespace system {
/** API action "system/get_mime_types" */
namespace get_mime_types {
/** API path "/api/system/get_mime_types" */
namespace v0 {

enum class Category
{
    /** API value "unknown" */
    Unknown,
    /** API value "image" */
    Image,
    /** API value "video" */
    Video,
    /** API value "audio" */
    Audio,
    /** API value "document" */
    Document,
    /** API value "application" */
    Application,
    /** API value "archive" */
    Archive,
    /** API value "data" */
    Data,
    /** API value "development" */
    Development,
    /** API value "spreadsheet" */
    Spreadsheet,
    /** API value "presentation" */
    Presentation
};

enum class ViewSystem
{
    /** API value "0" */
    None,
    /** API value "1" */
    Pdf2html,
    /** API value "2" */
    Pdf_js,
    /** API value "3" */
    Zoho
};

enum class EditSystem
{
    /** API value "0" */
    None,
    /** API value "1" */
    Ace,
    /** API value "2" */
    Zoho
};

/**
 * @class Response
 * @brief Response from API request "system/get_mime_types"
 */
class Response : public ResponseBase
{
public:
    struct MimeType
    {
        /** API response field "mimetype" */
        std::string mimetype;

        /** API response field "extension" */
        std::string extension;

        /** API response field "type" */
        boost::optional<Category> category;

        /** API response field "view" */
        boost::optional<ViewSystem> view_system;

        /** API response field "edit" */
        boost::optional<EditSystem> edit_system;
    };
    /** API response field "response.mime_types" */
    std::vector<MimeType> mimetypes;
};

class Impl;

/**
 * @class Request
 * @brief Make API request "system/get_mime_types"
 */
class Request
{
public:
    /**
     * API request "system/get_mime_types"
     */
    Request();

    // Remaining functions are for use by API library only. --------------------

    /** Requester/SessionMaintainer expected type. */
    typedef Response ResponseType;

    /** Requester/SessionMaintainer expected type. */
    typedef std::function< void( const ResponseType & data)> CallbackType;

    /** Requester/SessionMaintainer expected type. */
    void SetCallback( CallbackType callback_function );

    /** Requester expected method. */
    void HandleContent(
            const std::string & url,
            const mf::http::Headers & headers,
            const std::string & content
        );

    /** Requester expected method. */
    void HandleError(
            const std::string & url,
            std::error_code ec,
            const std::string & error_string
        );

    /** Requester expected method. */
    std::string Url(const std::string & hostname) const;


    // Enums in class namespace for usage with templates
    using Category = enum Category;
    using ViewSystem = enum ViewSystem;
    using EditSystem = enum EditSystem;

private:
    std::shared_ptr<Impl> impl_;
};
}  // namespace v0

}  // namespace get_mime_types
}  // namespace system
}  // namespace api
}  // namespace mf
